! Configuração do Keepalived para 3 nós com VRRP e IP virtual 192.168.1.250

# Note: The "</dev/tcp/127.0.0.1/80" syntax for a script
# requires that /bin/sh is Bash.
# On systems where /bin/sh is not Bash (e.g. Debian, Ubuntu),
# then the following alternatives should be used:
#   script "bash -c '</dev/tcp/127.0.0.1/80'"
# or
#   script "nc -z 127.0.0.1 80"

vrrp_instance VI_1 {
    state MASTER                      # No nó 1 coloque MASTER, nos nós 2 e 3 coloque BACKUP
    interface enp0s3                  # Interface de rede (substitua por sua interface real)
    virtual_router_id 51              # ID único para o grupo VRRP
    priority 100                      # No nó 1 use 100, no nó 2 use 90 e no nó 3 use 80
    advert_int 1                      # Intervalo de anúncios VRRP (em segundos)

    authentication {
        auth_type PASS
        auth_pass senha123
    }

    virtual_ipaddress {
        192.168.1.250/24              # IP virtual compartilhado entre os 3 nós
    }
}

virtual_server 192.168.1.250 80 {
    delay_loop 5                      # Verificar saúde dos nós a cada 5 segundos
    lb_algo rr                        # Algoritmo de balanceamento (round-robin)
    lb_kind DR                        # Modo de roteamento: Direct Routing
    persistence_timeout 0             # Sem persistência de conexão
    protocol TCP

    real_server 192.168.1.251 80 {
        weight 1                      # Peso para o nó 1
        TCP_CHECK {
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }

    real_server 192.168.1.252 80 {
        weight 1                      # Peso para o nó 2
        TCP_CHECK {
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }

    real_server 192.168.1.253 80 {
        weight 1                      # Peso para o nó 3
        TCP_CHECK {
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }
}

virtual_server 192.168.1.250 443 {
    delay_loop 5
    lb_algo rr
    lb_kind DR
    persistence_timeout 0
    protocol TCP

    real_server 192.168.1.251 443 {
        weight 1
        TCP_CHECK {
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }

    real_server 192.168.1.252 443 {
        weight 1
        TCP_CHECK {
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }

    real_server 192.168.1.253 443 {
        weight 1
        TCP_CHECK {
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }
}

virtual_server 192.168.1.250 8080 {
    delay_loop 5
    lb_algo rr
    lb_kind DR
    persistence_timeout 0
    protocol TCP

    real_server 192.168.1.251 8080 {
        weight 1
        TCP_CHECK {
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }

    real_server 192.168.1.252 8080 {
        weight 1
        TCP_CHECK {
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }

    real_server 192.168.1.253 8080 {
        weight 1
        TCP_CHECK {
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }
}

virtual_server 192.168.1.250 8081 {
    delay_loop 5
    lb_algo rr
    lb_kind DR
    persistence_timeout 0
    protocol TCP

    real_server 192.168.1.251 8081 {
        weight 1
        TCP_CHECK {
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }

    real_server 192.168.1.252 8081 {
        weight 1
        TCP_CHECK {
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }

    real_server 192.168.1.253 8081 {
        weight 1
        TCP_CHECK {
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }
}

virtual_server 192.168.1.250 3306 {
    delay_loop 5
    lb_algo rr
    lb_kind DR
    persistence_timeout 0
    protocol TCP

    real_server 192.168.1.251 3306 {
        weight 1
        TCP_CHECK {
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }

    real_server 192.168.1.252 3306 {
        weight 1
        TCP_CHECK {
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }

    real_server 192.168.1.253 3306 {
        weight 1
        TCP_CHECK {
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }
}
