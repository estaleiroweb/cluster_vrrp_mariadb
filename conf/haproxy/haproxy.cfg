global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	log	global
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

listen stats
    bind *:9000
	mode http
    stats enable
    stats uri /
    stats refresh 10s
    stats admin if { src 0.0.0.0/0 }
    # stats admin if { src 127.0.0.1 }
    stats realm Strictly\ Private
    stats auth <HAPROXY_ADMIN_USER>:<HAPROXY_ADMIN_PASS>
    # stats auth Another_User:passwd

listen http-cluster
	bind <IPV>:80
	mode http
	option	httplog
    option httpchk GET /info.html
	balance roundrobin
	server http-1 <IP_BASE>1:80 check inter 2000 rise 2 fall 3
	server http-2 <IP_BASE>2:80 check inter 2000 rise 2 fall 3
	server http-3 <IP_BASE>3:80 check inter 2000 rise 2 fall 3

listen https-cluster
	bind <IPV>:443
	mode http
	option	httplog
    option httpchk GET /info.html
	balance roundrobin
	server https-1 <IP_BASE>1:443 check inter 2000 rise 2 fall 3
	server https-2 <IP_BASE>2:443 check inter 2000 rise 2 fall 3
	server https-3 <IP_BASE>3:443 check inter 2000 rise 2 fall 3

listen maxscale-cluster
	bind <IPV>:8989
	mode http
	option	httplog
    option httpchk GET /
	balance roundrobin
	server maxscale-1 <IP_BASE>1:8989 check inter 2000 rise 2 fall 3
	server maxscale-2 <IP_BASE>2:8989 check inter 2000 rise 2 fall 3
	server maxscale-3 <IP_BASE>3:8989 check inter 2000 rise 2 fall 3

listen mariadb-proxy
	bind <IPV>:3307
	mode tcp

	timeout connect 5s
	timeout server 10s
	option tcp-check
	tcp-check connect
	tcp-check expect string "mysql_native_password"
	tcp-check send "LOGIN\0<HAPROXY_USER>\0<HAPROXY_PASS>\0"

	balance roundrobin
	server mariadb-1 <IP_BASE>1:3307 check inter 2000 rise 2 fall 3
	server mariadb-2 <IP_BASE>2:3307 check inter 2000 rise 2 fall 3
	server mariadb-3 <IP_BASE>3:3307 check inter 2000 rise 2 fall 3

listen mariadb-cluster
	bind <IPV>:3306
	mode tcp

	timeout connect 5s
	timeout server 10s
	option tcp-check
	tcp-check connect
	tcp-check expect string "mysql_native_password"
	tcp-check send "LOGIN\0<HAPROXY_USER>\0<HAPROXY_PASS>\0"
	# option mysql-check user <HAPROXY_USER>
	# option mysql-check user <HAPROXY_USER> password <HAPROXY_PASS>

	balance roundrobin
	server mariadb-1 <IP_BASE>1:3306 check inter 2000 rise 2 fall 3
	server mariadb-2 <IP_BASE>2:3306 check inter 2000 rise 2 fall 3
	server mariadb-3 <IP_BASE>3:3306 check inter 2000 rise 2 fall 3

###########
	# global
	# 	log /dev/log	local0
	# 	log /dev/log	local1 notice
	# 	chroot /var/lib/haproxy
	# 	stats socket /run/haproxy/admin.sock mode 660 level admin
	# 	stats timeout 30s
	# 	user haproxy
	# 	group haproxy
	# 	daemon
	# 
	# 	# Default SSL material locations
	# 	ca-base /etc/ssl/certs
	# 	crt-base /etc/ssl/private
	# 
	# 	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
	#         ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
	#         ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
	#         ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
	# 
	# defaults
	# 	log	global
	# 	mode	http
	# 	option	httplog
	# 	option	dontlognull
	#         timeout connect 5000
	#         timeout client  50000
	#         timeout server  50000
	# 	errorfile 400 /etc/haproxy/errors/400.http
	# 	errorfile 403 /etc/haproxy/errors/403.http
	# 	errorfile 408 /etc/haproxy/errors/408.http
	# 	errorfile 500 /etc/haproxy/errors/500.http
	# 	errorfile 502 /etc/haproxy/errors/502.http
	# 	errorfile 503 /etc/haproxy/errors/503.http
	# 	errorfile 504 /etc/haproxy/errors/504.http
	# 
	# listen stats
	#     bind *:9000
	#     stats enable
	#     stats uri /stats
	#     stats refresh 10s
	#     stats admin if { src 127.0.0.1 }
	# 
	# frontend main
	#     bind <IPV>:80  # Para Apache
	#     bind <IPV>:3306 # Para MariaDB
	#     bind <IPV>:8080 # Para a aplicação
	#     default_backend apache_backend  # Serve o Apache por padrão (pode ser ajustado conforme necessidade)
	# 
	#     acl is_apache   dst_port 80
	#     acl is_mariadb  dst_port 3306
	#     acl is_app      dst_port 8080
	# 
	#     use_backend apache_backend if is_apache
	#     use_backend mariadb_backend if is_mariadb
	#     use_backend app_backend if is_app
	# 
	#     # # Redireciona para a página de monitoramento de status
	#     # acl is_stats_path path_beg /stats
	#     # use_backend stats_backend if is_stats_path
	# 
	# backend apache_backend
	#     balance roundrobin
	#     option httpchk GET /healthcheck
	#     server apache1 <IP_BASE>1:80 check inter 2000 rise 2 fall 3
	#     server apache2 <IP_BASE>2:80 check inter 2000 rise 2 fall 3
	#     server apache3 <IP_BASE>3:80 check inter 2000 rise 2 fall 3
	# 
	# backend mariadb_backend
	#     balance roundrobin
	#     server mariadb1 <IP_BASE>1:3306 check inter 2000 rise 2 fall 3
	#     server mariadb2 <IP_BASE>2:3306 check inter 2000 rise 2 fall 3
	#     server mariadb3 <IP_BASE>3:3306 check inter 2000 rise 2 fall 3
	# 
	# backend app_backend
	#     balance roundrobin
	#     server app1 <IP_BASE>1:8080 check inter 2000 rise 2 fall 3
	#     server app2 <IP_BASE>2:8080 check inter 2000 rise 2 fall 3
	#     server app3 <IP_BASE>3:8080 check inter 2000 rise 2 fall 3


	# backend stats_backend
	#     mode http
	#     stats enable
	#     stats uri /stats
	#     stats refresh 10s
	#     stats admin if { src 127.0.0.1 }
